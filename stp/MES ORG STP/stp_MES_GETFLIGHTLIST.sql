USE [BHSDB]
GO
/****** Object:  StoredProcedure [dbo].[stp_MES_GETFLIGHTLIST]    Script Date: 2014-04-06 12:33:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Guo Wenyu
-- Create date: 06-April-2014
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[stp_MES_GETFLIGHTLIST]
	@Filter int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--1. SELECT ALL FLIGHT LIST BETWEEN GETDATE()-4 AND GETDATE()+4
	SELECT	FLIGHT, STD,  FLIGHT_DESTINATION,  SORT_DESTINATION, IS_MANUAL_CLOSE, IS_CLOSED
	INTO	#TEMP_ALL_FLIGHT_LIST
	FROM	(
				SELECT	FPA.[AIRLINE] + '' + FPA.[FLIGHT_NUMBER] AS FLIGHT, 
						dbo.RPT_TIME_CAL(FPA.SDO,FPA.STO,FPA.ALLOC_CLOSE_OFFSET) AS STD, 
						COALESCE(FPS.DEST1 + '', '', '') 
						+ COALESCE(FPS.DEST2 + '', '', '') 
						+ COALESCE(FPS.DEST3 + '', '', '') 
						+ COALESCE(FPS.DEST4 + '', '', '') 
						+ COALESCE(FPS.DEST5 + '', '', '') 
						+ COALESCE(FPS.FINAL_DEST, '') AS [FLIGHT_DESTINATION], 
						dbo.MES_GETALLOCATEDDESTINATION(FPA.AIRLINE, FPA.FLIGHT_NUMBER, FPA.SDO, FPA.STO) AS [SORT_DESTINATION],
						FPA.IS_MANUAL_CLOSE, FPA.IS_CLOSED
				FROM	FLIGHT_PLAN_SORTING FPS, FLIGHT_PLAN_ALLOC FPA
				WHERE	FPS.AIRLINE = FPA.AIRLINE 
					AND FPS.FLIGHT_NUMBER = FPA.FLIGHT_NUMBER 
					AND FPS.SDO = FPA.SDO
			) FLIGHT_INFO
	WHERE	STD BETWEEN DATEADD(HH, -4, GETDATE()) AND DATEADD(HH, 4, GETDATE())
	ORDER BY STD, FLIGHT

	DECLARE @STARTTIME DATETIME;
	DECLARE @ENDTIME DATETIME;
	IF @Filter<>0
	BEGIN
		IF @Filter>0
		BEGIN
			SET @STARTTIME = GETDATE();
			SET @ENDTIME = DATEADD(HH, @Filter, GETDATE());
		END
		ELSE IF @Filter<0
		BEGIN
			SET @STARTTIME = DATEADD(HH, @Filter, GETDATE());
			SET @ENDTIME = GETDATE();
		END

		SELECT	FLIGHT, STD,  FLIGHT_DESTINATION,  SORT_DESTINATION 
		FROM	#TEMP_ALL_FLIGHT_LIST AFL
		WHERE	AFL.STD BETWEEN @STARTTIME AND @ENDTIME
		ORDER BY STD,FLIGHT
	END
	ELSE
	BEGIN
		SELECT	FLIGHT, STD,  FLIGHT_DESTINATION,  SORT_DESTINATION 
		FROM	#TEMP_ALL_FLIGHT_LIST AFL
		WHERE	AFL.STD >= GETDATE()
		UNION ALL
		SELECT	FLIGHT, STD,  FLIGHT_DESTINATION,  SORT_DESTINATION 
		FROM	#TEMP_ALL_FLIGHT_LIST AFL
		WHERE	IS_MANUAL_CLOSE = 1 AND IS_CLOSED = 0
		ORDER BY STD,FLIGHT
	END

END

